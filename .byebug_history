c
message
bootstrap_class_for(type)
c
flash
c
expense = params[:expense]
params
c
render partial: 'shared/flash_messages'
c
shared/flash_messages
c
flash.now[:success] = "Successfully created."
response.values.present?
 response
query_str = 'mutation{createExpense(description: "' + expense[:description] + '" ,item_name: "' + expense[:item_name] + '" ,cost: ' + expense[:cost]+ ' ,quantity: ' + expense[:quantity] + ' ,subtotal: ' + expense[:subtotal] + ' ,date: "' + expense[:date] + '"){id description item_name cost quantity subtotal date}} ' AssignmentSchema.execute(query_str, context: {current_user: current_user})
expense = params[:expense]
c
response.values
response.errors
response.valid?
response.v
response.value
response.present?
response.present
response.inspect
response.mutation?
response.query?
response.status
response.context
response.public_methods
response
AssignmentSchema.execute(query_str, context: {current_user: current_user})
 query_str = 'mutation{createExpense(description: "' + expense[:description] + '" ,item_name: "' + expense[:item_name] + '" ,cost: ' + expense[:cost]+ ' ,quantity: ' + expense[:quantity] + ' ,subtotal: ' + expense[:subtotal] + ' ,date: "' + expense[:date] + '"){id description item_name cost quantity subtotal date}} ' response = AssignmentSchema.execute(query_str, context: {current_user: current_user})
expense = params[:expense]
c
AssignmentSchema.execute(query_str, context: {current_user: current_user})
query_str = 'mutation{createExpense(description: "' + expense[:description] + '" ,item_name: "' + expense[:item_name] + '" ,cost: ' + expense[:cost]+ ' ,quantity: ' + expense[:quantity] + ' ,subtotal: ' + expense[:subtotal] + ' ,date: "' + expense[:date] + '"){id description item_name cost quantity subtotal date}} '
AssignmentSchema.execute(query_str, context: {current_user: current_user})
query_str = 'mutation{createExpense(description: "' + expense[:description] + '" ,item_name: "' + expense[:item_name] + '" ,cost: ' + expense[:cost]+ ' ,quantity: ' + expense[:quantity] + ' ,subtotal: ' + expense[:subtotal] + ' ,date: "' + expense[:date] + '"){description}} '
AssignmentSchema.execute(query_str, context: {current_user: current_user})
query_str = 'mutation{createExpense(description: "' + expense[:description] + '" ,item_name: "' + expense[:item_name] + '" ,cost: ' + expense[:cost]+ ' ,quantity: ' + expense[:quantity] + ' ,subtotal: ' + expense[:subtotal] + ' ,date: "' + expense[:date] + '")} '
expense = params[:expense]
query_str = 'mutation{createExpense(description: "' + expense[:description] + '" ,item_name: "' + expense[:item_name] + '" ,cost: ' + expense[:cost]+ ' ,quantity: ' + expense[:quantity] + ' ,subtotal: ' + expense[:subtotal] + ' ,date: "' + expense[:date] + '")} '
query_str = 'mutation{createExpense(description: "' + expense[:description] + '" ,item_name: "' + expense[:item_name] + '" ,cost: ' + expense[:cost]+ ' ,quantity: ' + expense[:quantity] + ' ,subtotal: ' + expense[:subtotal] + ' ,date: "' + expense[:date] + '"){description}} '
AssignmentSchema.execute(query_str, context: {current_user: current_user})
query_str = 'mutation{createExpense(description: "' + expense[:description] + '" ,item_name: "' + expense[:item_name] + '" ,cost: ' + expense[:cost]+ ' ,quantity: ' + expense[:quantity] + ' ,subtotal: ' + expense[:subtotal] + ' ,date: "' + expense[:date] + '" '
reload!
AssignmentSchema.execute(query_str, context: {current_user: current_user})
query_str = "mutation{createExpense(description: '" + expense[:description] + "' ,item_name: '" + expense[:item_name] + "' ,cost: " + expense[:cost]+ " ,quantity: " + expense[:quantity] + " ,subtotal: " + expense[:subtotal] + " ,date: '" + expense[:date] + "'"
AssignmentSchema.execute(query_str, context: {current_user: current_user})
query_str = "mutation{createExpense(description:'" + expense[:description] + "' ,item_name:'" + expense[:item_name] + "' ,cost:" + expense[:cost]+ " ,quantity:" + expense[:quantity] + " ,subtotal:" + expense[:subtotal] + " ,date:'" + expense[:date] + "'"
query_str = "mutation{createExpense(description:'" + expense[:description] + "' item_name:'" + expense[:item_name] + "' cost:" + expense[:cost]+ " quantity:" + expense[:quantity] + " subtotal:" + expense[:subtotal] + " date:'" + expense[:date] + "'"
AssignmentSchema.execute(query_str, context: {current_user: current_user})
query_str = "mutation{createExpense(description:'" + expense[:description] + "' item_name:'" + expense[:item_name] + "' cost:" + expense[:cost]+ " quantity:" + expense[:quantity] + " subtotal:" + expense[:subtotal] + " date:'" + expense[:date] + "'"
query_str = "mutation{createExpense(description:'" + expense[:description] + "'] item_name:'" + expense[:item_name] + "'] cost:" + expense[:cost]+ "] quantity:" + expense[:quantity] + "] subtotal:" + expense[:subtotal] + "] date:'" + expense[:date] + "']"
query_str = 'mutation{createExpense(description: '/"#{expense[:description]}"', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: nil'', subtotal: '"#{expense[:subtotal]}"'){description}}'
query_str = 'mutation{createExpense(description: '"#{expense[:description]}"', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: nil'', subtotal: '"#{expense[:subtotal]}"'){description}}'
AssignmentSchema.execute(query_str, context: {current_user: current_user})
query_str = 'mutation{createExpense(description: '"#{expense[:description]}"', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: "12-12-2018"'', subtotal: '"#{expense[:subtotal]}"'){description}}'
AssignmentSchema.execute(query_str, context: {current_user: current_user})
query_str = 'mutation{createExpense(description: '"#{expense[:description]}"', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: nil'', subtotal: '"#{expense[:subtotal]}"'){description}}'
AssignmentSchema.execute(query_str, context: {current_user: current_user})
query_str = 'mutation{createExpense(description: '"#{expense[:description]}"', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: nil'', subtotal: '"#{expense[:subtotal]}"')}'
query_str = 'mutation{createExpense(description: '"#{expense[:description]}"', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: 'nil', subtotal: '"#{expense[:subtotal]}"')}'
query_str = 'mutation{createExpense(description: '"#{expense[:description]}"', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: '', subtotal: '"#{expense[:subtotal]}"')}'
query_str = 'mutation{createExpense(description: '"#{expense[:description]}"', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: '"#{expense[:date]}"', subtotal: '"#{expense[:subtotal]}"')}'
query_str = 'mutation{createExpense(description: "'+expense[:description]+'", item_name: '+expense[:item_name]}+"', cost: "'+ expense[:cost]}+'", quantity: "'+expense[:quantity]}+'", date: "'+expense[:date]}+'", subtotal: "'+expense[:subtotal]}+'")}'
query_str = 'mutation{createExpense(description: "'+expense[:description]+'", item_name: '+expense[:item_name]}+'"', cost: "'+ expense[:cost]}+'", quantity: "'+expense[:quantity]}+'", date: "'+expense[:date]}+'", subtotal: "'+expense[:subtotal]}+'")}'
query_str = 'mutation{createExpense(description: "'+expense[:description]+''", item_name: "'+expense[:item_name]}+'"', cost: "'+ expense[:cost]}+'", quantity: "'+expense[:quantity]}+'", date: "'+expense[:date]}+'", subtotal: "'+expense[:subtotal]}+'")}'
query_str = 'mutation{createExpense(description: "'+expense[:description]+'", item_name: "'+expense[:item_name]}+'", cost: "'+ expense[:cost]}+'", quantity: "'+expense[:quantity]}+'", date: "'+expense[:date]}+'", subtotal: "'+expense[:subtotal]}+'")}'
query_str = 'mutation{createExpense(description: "'+ expense[:description] +'", item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: '"#{expense[:date]}"', subtotal: '"#{expense[:subtotal]}"')}'
query_str = 'mutation{createExpense(description: "'+ expense[:description] "+', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: '"#{expense[:date]}"', subtotal: '"#{expense[:subtotal]}"')}'
query_str = 'mutation{createExpense(description: "'+ expense[:description] +', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: '"#{expense[:date]}"', subtotal: '"#{expense[:subtotal]}"')}'
query_str = 'mutation{createExpense(description: '+ expense[:description] +', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: '"#{expense[:date]}"', subtotal: '"#{expense[:subtotal]}"')}'
query_str = 'mutation{createExpense(description: '"#{expense[:description]}"', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: '"#{expense[:date]}"', subtotal: '"#{expense[:subtotal]}"')}'
query_str = 'mutation{createExpense(description: '"#{expense[:description]}"', item_name: '"#{expense[:item_name]}"', cost: '"#{expense[:cost]}"', quantity: '"#{expense[:quantity]}"', date: '"#{expense[:date]}"', subtotal: '"#{expense[:subtotal]}")}'
query_str = "mutation{createExpense(description: #{expense[:description]}, item_name: #{expense[:item_name]}, cost: #{expense[:cost]}, quantity: #{expense[:quantity]}, date: #{expense[:date].to_s}, subtotal: #{expense[:subtotal]})}"
AssignmentSchema.execute(query_str, context: {current_user: current_user})
current_user
query_str = "mutation{createExpense(description: #{expense[:description]}, item_name: #{expense[:item_name]}, cost: #{expense[:cost]}, quantity: #{expense[:quantity]}, date: #{expense[:date]}, subtotal: #{expense[:subtotal]})}"
query_str = "mutation{createExpense(description: #{expense[:description]}, item_name: #{expense[:item_name]}, cost: #{expense[:cost]}, quantity: #{expense[:quantity]}, date: #{expense[:date]})}"
query_str = "mutation{createExpense(description: #{expense[:description]}, item_name: #{expense[:item_name]}, cost: #{expense[:cost]}, quantity: #{expense[:quantity]})}"
query_str = "mutation{createExpense(description: #{expense[:description]}, item_name: #{expense[:item_name]}, cost: #{expense[:cost]}, quantity: #{expense[:quatity]})}"
query_str = "mutation{createExpense(description: #{expense[:description]}, item_name: #{expense[:item_name]}, cost: #{expense[:cost]}, quantity: #)}"
query_str = "mutation{createExpense(description: #{expense[:description]})}"
query_str = "mutation{createExpense(description: expense[:description])}"
query_str = "mutation{createExpense(description: "expense[:description]'")}"
query_str = "mutation{createExpense(description: "'expense[:description]'")}"
query_str = "mutation{createExpense(description: "'\expense[:description]'")}"
query_str = "mutation{createExpense(description: "'\expense[:description]\'")}"
query_str = "mutation{createExpense(description: "'\#{expense[:description]}\'")}"
query_str = "mutation{createExpense(description: "'/#{expense[:description]}/'")}"
query_str = "mutation{createExpense(description: "'#{expense[:description]}'")}"
query_str = "mutation{createExpense(description: '"#{expense[:description]}"')}"
query_str = "mutation{createExpense(description: #{expense[:description].to_s})}"
query_str = "mutation{createExpense(description: #{expense[:description]})}"
query_str = 'mutation{createExpense(description: #{expense[:description]})}'
query_str = 'mutation{createExpense(description: "#{expense[:description]}")}'
expense[:description]
query_str = 'mutation{createExpense(description: "#{expense[:description]}", type: "#{params[:type]}", cost: "#{params[:cost]}", quantity: "#{params[:quantity]}", subtotal: "#{params[:subtotal]}", date: "#{params[:date]}") {id description type cost quantity subtotal date }}'
expense = params[:expense]
params
c
current_user
c
@expense
@expense.save
 Expense.new
@expense = Expense.new(expense_params)
expense_params
c
user_signed_in?
c
root_path
root
c
AssignmentSchema.execute(query_string)
query_string = "query getExpense { expense{ id, description, type } }"
AssignmentSchema.execute(query_string)
query_string = "query getExpense { description, type }"
AssignmentSchema.execute(query_string)
query_string = "query getExpense { id, description, type }"
AssignmentSchema.execute(query_string)
query_string = "query getExpense { expense(id: 1) { id, description, type } }"
AssignmentSchema.execute(query_string)
query_string = "query getExpense #{params[:query]}"
params[:query]
query_string
